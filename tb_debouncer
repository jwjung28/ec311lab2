`timescale 1ns/1ps
module tb_debouncer;
  reg  clk = 0;
  reg  reset = 1;         
  reg  button_in = 0;
  wire button_out;

 
  debouncer #(.DEBOUNCE_MAX(6)) dut (
    .clk(clk), .reset(reset), .button_in(button_in), .button_out(button_out)
  );

  always #5 clk = ~clk;

  task reset_falling_edge_once;
  begin
    @(posedge clk); reset = 0;   
    @(posedge clk); reset = 1;  
  end
  endtask

  initial begin
   
    reset_falling_edge_once();

    repeat (3) @(negedge clk);
    button_in = 1;

   
    reset_falling_edge_once();  // counter cleared here
    repeat (2) @(negedge clk);
    reset_falling_edge_once();  // cleared again
    repeat (3) @(negedge clk);
    reset_falling_edge_once();  // cleared again

    repeat (8) @(negedge clk);

    button_in = 0;
    repeat (8) @(negedge clk);

    $finish;
  end
endmodule
